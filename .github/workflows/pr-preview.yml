name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  build_preview:
    runs-on: ubuntu-latest
    name: Build PR Preview
    if: github.event.action != 'closed'
    permissions:
      pull-requests: write
      contents: write
      deployments: write
      statuses: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # We need full history for proper versioning
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
      
      - name: Build Jekyll site
        run: |
          # Customize base URL for preview deployment
          echo "url: https://ajeetraina.github.io" >> _config.yml
          echo "baseurl: /mcp-portal/pr-preview/pr-${{ github.event.pull_request.number }}" >> _config.yml
          
          bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      
      - name: Deploy preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          destination_dir: pr-preview/pr-${{ github.event.pull_request.number }}
          keep_files: true
          publish_branch: gh-pages
      
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚úÖ PR Preview deployed successfully!\n\nüîç Preview your changes: [https://ajeetraina.github.io/mcp-portal/pr-preview/pr-${context.issue.number}/](https://ajeetraina.github.io/mcp-portal/pr-preview/pr-${context.issue.number}/)\n\nThis preview will update automatically when you push new changes to your PR.`
            })

  cleanup_preview:
    runs-on: ubuntu-latest
    name: Cleanup PR Preview
    if: github.event.action == 'closed'
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      
      - name: Delete preview directory
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          if [ -d "pr-preview/pr-${{ github.event.pull_request.number }}" ]; then
            git rm -rf pr-preview/pr-${{ github.event.pull_request.number }}
            git commit -m "Remove PR preview for #${{ github.event.pull_request.number }}"
            git push
          else
            echo "No preview directory found to clean up"
          fi